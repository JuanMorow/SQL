--For this project, I downloaded Spotify data from Kaggle.
--Then I created a table to insert Spotify data into it.
--Finally, I performed analytics on the data using SQL. 

--Creating the table: 

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL);

--Then I inserted the Spotify Data .csv into the table.

--Next, I explored the data using the following SQL. 

--TOP 10 artists by popularity

SELECT artist_name, popularity 
FROM BIT_DB.Spotifydata
ORDER BY popularity desc LIMIT 10;

--Wanted to determinate the fastest song and which artist sang it

SELECT artist_name, track_name
FROM BIT_DB.Spotifydata
WHERE tempo in (SELECT MAX(tempo) FROM BIT_DB.Spotifydata);

--AVG duration of song

SELECT AVG(duration_ms)
FROM BIT_DB.Spotifydata;

--Then I determined what artist has multiple entries on the list

SELECT artist_name, COUNT(artist_name)
FROM BIT_DB.Spotifydata
WHERE artist_name >1
GROUP BY artist_name
ORDER BY COUNT(artist_name) desc
